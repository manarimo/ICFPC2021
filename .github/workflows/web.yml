name: Deploy Portal

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: kenkoooo/node_modules
          key: ${{ hashFiles('kenkoooo/package.json') }}-${{ hashFiles('kenkoooo/yarn.lock') }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-cargo-modules
        with:
          path: |
            kenkoooo/target
            ~/.cargo
            /usr/share/rust/.cargo
          key: ${{ hashFiles('kenkoooo/wasm-rust/Cargo.toml') }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-pip-modules
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('amylase/requirements.txt') }}
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Python dependencies
        run: pip install -r amylase/requirements.txt
      - name: Generate submission report
        working-directory: amylase
        run: PYTHONPATH=${{ env.GITHUB_WORKSPACE }}/ICFPC2021 python -m amylase.package_solutions
      - name: run checker
        working-directory: checker
        run: |
          npm install
          npm run check
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
      - name: Generate web
        run: ruby gen_web/main.rb
      - name: build visualizer
        working-directory: kenkoooo
        run: |
          curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
          yarn
          yarn build
          mv ./docs ../web/kenkoooo
      - name: copy solutions
        run: cp -r solutions web
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --size-only
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'web'